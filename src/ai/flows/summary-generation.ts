// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview A flow to generate concise summaries for topics and subtopics using RAG and cross-referencing.
 *
 * - generateSummary - A function that handles the summary generation process.
 * - GenerateSummaryInput - The input type for the generateSummary function.
 * - GenerateSummaryOutput - The return type for the generateSummary function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateSummaryInputSchema = z.object({
  documentContent: z
    .string()
    .describe('The content of the document to generate summaries for.'),
  topic: z.string().describe('The topic or subtopic to summarize.'),
});
export type GenerateSummaryInput = z.infer<typeof GenerateSummaryInputSchema>;

const GenerateSummaryOutputSchema = z.object({
  summary: z
    .string()
    .describe('A concise 2-3 sentence summary of the topic.'),
});
export type GenerateSummaryOutput = z.infer<typeof GenerateSummaryOutputSchema>;

export async function generateSummary(input: GenerateSummaryInput): Promise<GenerateSummaryOutput> {
  return generateSummaryFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateSummaryPrompt',
  input: {schema: GenerateSummaryInputSchema},
  output: {schema: GenerateSummaryOutputSchema},
  prompt: `You are an expert summarizer. Generate a concise 2-3 sentence summary for the given topic based on the document content. Use Retrieval-Augmented Generation (RAG) to extract relevant information from the document and cross-reference to avoid redundancy. Exclude irrelevant sections and focus on meaningful content.

Document Content: {{{documentContent}}}

Topic: {{{topic}}}

Summary:`, // Ensure the LLM outputs only the summary
});

const generateSummaryFlow = ai.defineFlow(
  {
    name: 'generateSummaryFlow',
    inputSchema: GenerateSummaryInputSchema,
    outputSchema: GenerateSummaryOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return {
      summary: output!.summary,
    };
  }
);
